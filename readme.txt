下面是算法的步骤：

1.创建一个包含n+1个大整数（使用GMP库中的mpz_t类型）的数组dp，其中dp[i]表示拆分为i的整数的方式数。初始化所有元素为0，除了dp[0]，将其初始化为1，因为只有一种方式将0拆分为0。

2.从i=1到n遍历，对于每个i，遍历从i到n的每个j。在每个j上，更新dp[j]，将其增加dp[j - i]的值，表示拆分j时考虑i这个数的方式数。

3.最终，dp[n]中存储了整数n的拆分方式数。

使用GMP库中的mpz_t类型来处理大整数，以便计算非常大的整数的拆分方式数。

这个算法在计算整数拆分方式数时具有高效性，而且可以应对相当大的数字。它将问题分解为子问题并进行逐步累积，最终得到整数n的拆分方式数。在主函数中，用户可以输入要计算的数字，然后算法会计算并输出相应的整数拆分方式数。

main可执行文件，已经链接GMP库进行编译，可直接运行。